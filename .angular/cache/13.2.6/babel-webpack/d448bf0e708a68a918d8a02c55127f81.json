{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./../../services/student.service\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/select\";\nimport * as i8 from \"@angular/material/core\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"@angular/material/datepicker\";\nimport * as i11 from \"@angular/material/button\";\n\nfunction StudentFormComponent_mat_option_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const class_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", class_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", class_r2, \" \");\n  }\n}\n\nexport let StudentFormComponent = /*#__PURE__*/(() => {\n  class StudentFormComponent {\n    constructor(_formBuilder, _studentService, _snackBar, dialogRef, data) {\n      this._formBuilder = _formBuilder;\n      this._studentService = _studentService;\n      this._snackBar = _snackBar;\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.classes = ['LP-DIM-APP', 'LP-DIM-FI'];\n      this.isUpdateMode = this.data.isUpdateMode;\n    }\n\n    ngOnInit() {\n      this.initFormBuilder();\n    }\n\n    initFormBuilder() {\n      this.studentForm = this._formBuilder.group({\n        id: [this.data.isUpdateMode ? this.data.studentToUpdate.id : this.data.idToCreate, Validators.required],\n        firstName: [this.data.isUpdateMode ? this.data.studentToUpdate.firstName : '', Validators.required],\n        lastName: [this.data.isUpdateMode ? this.data.studentToUpdate.lastName : '', Validators.required],\n        class: [this.data.isUpdateMode ? this.data.studentToUpdate.class : '', Validators.required],\n        dateOfBirth: [this.data.isUpdateMode ? this.data.studentToUpdate.dateOfBirth : '', Validators.required],\n        email: [this.data.isUpdateMode ? this.data.studentToUpdate.email : '', [Validators.required, Validators.email]]\n      });\n    }\n\n    closeForm(id) {\n      this.studentForm.reset();\n      this.dialogRef.close(id);\n    }\n\n    onSubmit(student) {\n      if (this.studentForm.valid) {\n        if (this.data.isUpdateMode) {\n          // update\n          this._studentService.update(student).subscribe(response => {\n            this.closeForm(student.id);\n\n            this._snackBar.open(response, '', {\n              duration: 2000,\n              panelClass: ['mat-toolbar', 'mat-accent']\n            });\n          });\n        } else {\n          // create\n          this._studentService.create(student).subscribe(response => {\n            this.closeForm(student.id);\n\n            this._snackBar.open(response, '', {\n              duration: 2000,\n              panelClass: ['mat-toolbar', 'mat-accent']\n            });\n          });\n        }\n      }\n    }\n\n  }\n\n  StudentFormComponent.ɵfac = function StudentFormComponent_Factory(t) {\n    return new (t || StudentFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.StudentService), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n\n  StudentFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StudentFormComponent,\n    selectors: [[\"app-student-form\"]],\n    decls: 41,\n    vars: 7,\n    consts: [[\"mat-dialog-title\", \"\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mat-typography\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"formControlName\", \"firstName\"], [\"matInput\", \"\", \"formControlName\", \"lastName\"], [\"matInput\", \"\", \"formControlName\", \"email\"], [\"appearance\", \"fill\", 1, \"w-100\"], [\"formControlName\", \"class\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"formControlName\", \"dateOfBirth\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [1, \"float-right\"], [\"mat-button\", \"\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [3, \"value\"]],\n    template: function StudentFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"student-form works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"h2\", 0);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function StudentFormComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.onSubmit(ctx.studentForm.value);\n        });\n        i0.ɵɵelementStart(5, \"mat-dialog-content\", 2)(6, \"mat-form-field\", 3)(7, \"mat-label\");\n        i0.ɵɵtext(8, \"FirstName\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"br\");\n        i0.ɵɵelementStart(11, \"mat-form-field\", 3)(12, \"mat-label\");\n        i0.ɵɵtext(13, \"LastName\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"br\");\n        i0.ɵɵelementStart(16, \"mat-form-field\", 3)(17, \"mat-label\");\n        i0.ɵɵtext(18, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"br\");\n        i0.ɵɵelementStart(21, \"mat-form-field\", 7)(22, \"mat-label\");\n        i0.ɵɵtext(23, \"Class\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"mat-select\", 8)(25, \"mat-option\");\n        i0.ɵɵtext(26, \"--\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(27, StudentFormComponent_mat_option_27_Template, 2, 2, \"mat-option\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(28, \"br\");\n        i0.ɵɵelementStart(29, \"mat-form-field\", 3)(30, \"mat-label\");\n        i0.ɵɵtext(31, \"Choose a date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(32, \"input\", 10)(33, \"mat-datepicker-toggle\", 11)(34, \"mat-datepicker\", null, 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(36, \"mat-dialog-actions\", 13)(37, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function StudentFormComponent_Template_button_click_37_listener() {\n          return ctx.closeForm();\n        });\n        i0.ɵɵtext(38, \"Annuler\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"button\", 15);\n        i0.ɵɵtext(40);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(35);\n\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"\", ctx.isUpdateMode ? \"Update\" : \"Add\", \" student form\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.studentForm);\n        i0.ɵɵadvance(23);\n        i0.ɵɵproperty(\"ngForOf\", ctx.classes);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"matDatepicker\", _r1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r1);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"disabled\", !ctx.studentForm.valid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.isUpdateMode ? \"Modifier\" : \"Ajouter\", \" \");\n      }\n    },\n    directives: [i4.MatDialogTitle, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i4.MatDialogContent, i5.MatFormField, i5.MatLabel, i6.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i7.MatSelect, i8.MatOption, i9.NgForOf, i10.MatDatepickerInput, i10.MatDatepickerToggle, i5.MatSuffix, i10.MatDatepicker, i4.MatDialogActions, i11.MatButton],\n    styles: [\"\"]\n  });\n  return StudentFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}